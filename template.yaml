AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Plataforma de Revenda de Veículos - Gerenciamento de Clientes

Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Tracing: Active
    Runtime: python3.12
    Architectures:
      - x86_64
    Environment:
      Variables:
        DB_TABLE_NAME: !Ref ClientesTable

Resources:
  # Criação da tabela DynamoDB Clientes
  ClientesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Clientes
      AttributeDefinitions:
        - AttributeName: cpf
          AttributeType: S
      KeySchema:
        - AttributeName: cpf
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # Papel (Role) da função Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: "LambdaDynamoDBAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                Resource: !GetAtt ClientesTable.Arn

  # Função Lambda de Cadastro de Clientes
  CadastrarClienteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "lambda-compradores-CadastrarClienteFunction"
      CodeUri: clientes/
      Handler: app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref ClientesTable

Outputs:
  ClientesTableName:
    Description: Nome da tabela DynamoDB para Clientes
    Value: !Ref ClientesTable
